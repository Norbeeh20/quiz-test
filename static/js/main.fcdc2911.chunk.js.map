{"version":3,"sources":["components/GameFinished/GameFinished.js","containers/Game/GameStarted/GameStarted.js","store/actions.js","containers/Game/Game.js","components/Question/Question.js","containers/Questioneditor/Questions/Questions.js","containers/Questioneditor/Questioneditor.js","containers/App/App.js","store/reducer.js","index.js","storage/localstorage.js"],"names":["GameFinished","props","points","className","onClick","restart","GameStarted","state","currentQuestion","questionAnswered","currentAnswer","activeOne","activeTwo","activeThree","activeFour","onNextQuestionHandler","setCorrectAnswerColor","setState","onGiveAnswerHandler","questions","answer","alert","getAnswerHandler","event","target","value","restartGame","onRestartGame","showColor","document","getElementById","this","style","backgroundColor","game","qstNumber","playerName","question","id","choiceOne","choiceTwo","choiceThree","choiceFour","Component","connect","Questions","numberOfQuestions","dispatch","type","Game","onStartGame","nmb","playerNameHandler","started","onChange","hasGameStarted","Question","delete","qst","map","item","key","onDeleteQuestion","Questioneditor","handleInputChange","name","handleSubmit","onAddQuestion","preventDefault","questionArray","onSubmit","cone","ctwo","cthree","cfour","ans","App","handleClick","running","window","confirm","restartPage","to","from","path","exact","component","React","initalState","isThereQuestion","reducer","action","Date","now","concat","updatedArray","filter","persistedState","serializedState","localStorage","getItem","JSON","parse","error","loadState","store","createStore","subscribe","stringify","setItem","console","log","saveState","getState","ReactDOM","render"],"mappings":"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","file":"static/js/main.fcdc2911.chunk.js","sourcesContent":["import React from 'react';\r\nimport '../../styles/Game.css'\r\n\r\nconst GameFinished = (props) => {\r\n    return (\r\n        <div>\r\n            <p>Elfogytak a kérdések, vége a kvíznek!</p>\r\n            <p>Összesen {props.points} pontot gyűjtöttél.</p>\r\n            <button className=\"styledButton\" onClick={props.restart}>Új játék</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameFinished;","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport GameFinished from '../../../components/GameFinished/GameFinished';\r\nimport '../../../styles/Game.css'\r\nimport * as actionTypes from '../../../store/actions';\r\n\r\n\r\nclass GameStarted extends Component{\r\n    state = {\r\n        currentQuestion: 0,\r\n        questionAnswered: false,\r\n        points: 0,\r\n        currentAnswer: null,\r\n        activeOne: false,\r\n        activeTwo: false,\r\n        activeThree: false,\r\n        activeFour: false\r\n    }\r\n\r\n    onNextQuestionHandler = () => {\r\n        this.setCorrectAnswerColor(false);\r\n        this.setState({currentQuestion: this.state.currentQuestion + 1,\r\n        questionAnswered:false,\r\n        activeOne: false,\r\n        activeTwo:false,\r\n        activeThree:false,\r\n        activeFour:false,\r\n        currentAnswer:null});\r\n    }\r\n\r\n    onGiveAnswerHandler = () => {\r\n        if(+this.state.currentAnswer === +this.props.questions[this.state.currentQuestion].answer){\r\n            this.setState({questionAnswered: true,\r\n            points: this.state.points + 1});\r\n            alert(\"Helyes válasz gratulálok!\");\r\n            this.setCorrectAnswerColor(true);\r\n        }else if(this.state.currentAnswer === null){\r\n            alert(\"Válassz ki egy válasz lehetőséget!\");\r\n        }else{\r\n            this.setState({questionAnswered: true});\r\n            alert(\"Rossz válasz, a helyes válasz beszíneződik!\")\r\n            this.setCorrectAnswerColor(true);\r\n        }\r\n    }\r\n\r\n    setCorrectAnswerColor (showColor){\r\n        document.getElementById(this.props.questions[this.state.currentQuestion].answer).style.backgroundColor = showColor ? \"#1ac74e\" : \"\";\r\n    }\r\n\r\n    getAnswerHandler = (event) => {\r\n        if(!this.state.questionAnswered){\r\n            this.setState({currentAnswer: event.target.value});\r\n            switch(event.target.value){\r\n                case \"1\":\r\n                    this.setState({activeOne: true,activeTwo:false,activeThree:false,activeFour:false});\r\n                    break;\r\n                case \"2\":\r\n                    this.setState({activeOne: false,activeTwo:true,activeThree:false,activeFour:false});\r\n                    break;\r\n                case \"3\":\r\n                    this.setState({activeOne: false,activeTwo:false,activeThree:true,activeFour:false});\r\n                    break;\r\n                case \"4\":\r\n                    this.setState({activeOne: false,activeTwo:false,activeThree:false,activeFour:true});\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }   \r\n    }\r\n\r\n    restartGame = () => {\r\n        this.props.onRestartGame();\r\n    }\r\n\r\n    render(){\r\n        let game;\r\n\r\n        if(this.state.currentQuestion === this.props.qstNumber){\r\n            game = <GameFinished points={this.state.points} restart={this.restartGame}/>\r\n        }else{\r\n            game = (\r\n                <div>  \r\n                    <p>Üdvözöllek {this.props.playerName}! </p>\r\n                    <p>{this.state.currentQuestion + 1}. kérdés:</p>\r\n                    <p>{this.props.questions[this.state.currentQuestion].question}</p>\r\n                        Első válasz: <button value=\"1\" id=\"1\" className={this.state.activeOne ? \"styledButton active\" : \"styledButton\"} onClick={event => this.getAnswerHandler(event)}>{this.props.questions[this.state.currentQuestion].choiceOne}</button>\r\n                        &emsp; Második válasz: <button value=\"2\" id=\"2\" className={this.state.activeTwo ? \"styledButton active\" : \"styledButton\"} onClick={event => this.getAnswerHandler(event)}>{this.props.questions[this.state.currentQuestion].choiceTwo}</button>\r\n                        <p/>\r\n                        Harmadik válasz: <button value=\"3\" id=\"3\" className={this.state.activeThree ? \"styledButton active\" : \"styledButton\"} onClick={event => this.getAnswerHandler(event)}>{this.props.questions[this.state.currentQuestion].choiceThree}</button>\r\n                        &emsp; Negyedik válasz: <button value=\"4\" id=\"4\" className={this.state.activeFour ? \"styledButton active\" : \"styledButton\"} onClick={event => this.getAnswerHandler(event)}>{this.props.questions[this.state.currentQuestion].choiceFour}</button>\r\n                        <p/>\r\n                        {this.state.questionAnswered === false &&\r\n                            <button className=\"styledButton\" onClick={this.onGiveAnswerHandler}>Küldés</button>}\r\n                        {this.state.questionAnswered === true &&\r\n                            <button className=\"styledButton\" onClick={this.onNextQuestionHandler}> {this.state.currentQuestion === (this.props.qstNumber-1) ? \"Játék vége\" : \"Következő kérdés\"}</button>}\r\n                    <hr />\r\n                        <p>Pontjaid: {this.state.points}</p>\r\n                        <p>Hátralévő kérdések száma: {this.props.qstNumber-(this.state.currentQuestion + 1)}</p>\r\n                    <hr />\r\n                </div>)\r\n        }\r\n\r\n        return (\r\n            <div> \r\n                {game}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        questions: state.Questions,\r\n        qstNumber: state.numberOfQuestions\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onRestartGame: () => dispatch({type: actionTypes.RESTART_GAME})\r\n    };  \r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(GameStarted);","export const ADD_QUESTION = 'ADD_QUESSTION';\r\nexport const DELETE_QUESTION = 'DELETE_QUETION';\r\nexport const START_GAME = 'START_GAME';\r\nexport const RESTART_GAME = 'RESTART_GAME';","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport GameStarted from './GameStarted/GameStarted';\r\nimport '../../styles/Game.css';\r\nimport * as actionTypes from '../../store/actions';\r\n\r\n\r\nclass Game extends Component {\r\n    state = {\r\n        playerName: \"player\"\r\n    }\r\n\r\n    onStartGame = () => {\r\n        if(this.state.playerName === \"\"){\r\n            alert(\"Név nélkül nem lehet elindítani, kérlek add meg!\");\r\n        }else if(this.props.nmb === 0){\r\n            alert(\"Ha nincs kérdés hozzáadva anélkül nem tudod elindítani, kérlek adj hozzá legalább 1 kérdést!\");\r\n        }\r\n        else{\r\n            this.props.onStartGame();\r\n        }        \r\n    }\r\n\r\n    playerNameHandler = (event) => {\r\n        this.setState({playerName: event.target.value});\r\n    }\r\n\r\n    render () {\r\n        let game = null;\r\n        if(this.props.started){\r\n            game = <GameStarted\r\n            playerName={this.state.playerName}/>\r\n        }else{\r\n            game = (<div>\r\n                        <p>Add meg a játékos nevedet!</p>\r\n                        <input onChange={event => this.playerNameHandler(event)} value={this.state.playerName}/>\r\n                        <p/>\r\n                        <button  className=\"styledButton\" onClick={this.onStartGame}>Játék indítása</button>\r\n                    </div>)\r\n        }\r\n\r\n        return (\r\n            <div className=\"gameBox\">\r\n                {game}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        nmb: state.numberOfQuestions,\r\n        started: state.hasGameStarted\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onStartGame: () => dispatch({type: actionTypes.START_GAME})\r\n    };\r\n    \r\n};\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Game);","import React from 'react';\r\nimport '../../styles/Question.css';\r\nimport '../../styles/Game.css';\r\n\r\nconst Question = (props) => {\r\n    return (\r\n        <div className=\"question\">\r\n            <p>Kérdés: {props.question.question}</p>\r\n            <p>Első válasz: {props.question.choiceOne} &emsp;  Második válasz: {props.question.choiceTwo}</p>\r\n            <p>Harmadik válasz: {props.question.choiceThree} &emsp;  Negyedik válasz: {props.question.choiceFour}</p>\r\n            <p>Helyes válasz sorszáma: {props.question.answer}</p>\r\n            <p><button className=\"styledButton\"onClick={props.delete}>Törlés</button></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Question from '../../../components/Question/Question';\r\nimport * as actionTypes from '../../../store/actions';\r\n\r\n\r\nclass Questions extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div>\r\n                    {this.props.qst.map((item) => (\r\n                        <Question question={item} key={item.id} delete={() => this.props.onDeleteQuestion(item.id)}/>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        qst: state.Questions\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onDeleteQuestion: (id) => dispatch({type: actionTypes.DELETE_QUESTION,id})\r\n    };\r\n    \r\n};\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Questions);\r\n\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Questions from './Questions/Questions';\r\nimport '../../styles/Questioneditor.css';\r\nimport * as actionTypes from '../../store/actions';\r\n\r\n\r\nclass Questioneditor extends Component{\r\n    state = { \r\n        question: '',\r\n        choiceOne: '',\r\n        choiceTwo: '',\r\n        choiceThree: '',\r\n        choiceFour: '',\r\n        answer: 1\r\n    }\r\n\r\n    \r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }    \r\n    \r\n    handleSubmit = (event) => {\r\n        if(this.state.question === \"\" || this.state.choiceOne === \"\" || this.state.choiceTwo === \"\" || this.state.choiceThree === \"\" || this.state.choiceFour === \"\"){\r\n            alert(\"Ki kell tölteni az összes mezőt, ahhoz hogy kérdést hozzáadd.\");\r\n        }else{\r\n        this.props.onAddQuestion(this.state.question,this.state.choiceOne,this.state.choiceTwo,this.state.choiceThree,this.state.choiceFour,this.state.answer);\r\n        this.setState({ \r\n            question: '',\r\n            choiceOne: '',\r\n            choiceTwo: '',\r\n            choiceThree: '',\r\n            choiceFour: '',\r\n            answer: 1\r\n        })\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"formAdd\">\r\n                <div className=\"scroll\">\r\n                    <Questions questionArray={this.props.qst}/>\r\n                </div>\r\n                <form className=\"addQuestion\" onSubmit={this.handleSubmit}>\r\n                    Kérdés hozzáadása:\r\n                    <hr />\r\n                    <div>\r\n                        <label>\r\n                            Kérdés:\r\n                            <input name=\"question\" type=\"text\" value={this.state.question} onChange={this.handleInputChange} />\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                            Első válasz:\r\n                            <input name=\"choiceOne\" type=\"text\" value={this.state.choiceOne} onChange={this.handleInputChange} />\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                            Második válasz:\r\n                            <input name=\"choiceTwo\" type=\"text\" value={this.state.choiceTwo} onChange={this.handleInputChange} />\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                            Harmadik válasz:\r\n                            <input name=\"choiceThree\" type=\"text\" value={this.state.choiceThree} onChange={this.handleInputChange} />\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                            Negyedik válasz:\r\n                            <input name=\"choiceFour\" type=\"text\" value={this.state.choiceFour} onChange={this.handleInputChange} />\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                            Melyik a helyes válasz? \r\n                            <select name=\"answer\" value={this.state.answer} onChange={this.handleInputChange}>\r\n                                <option value=\"1\">Első</option>\r\n                                <option value=\"2\">Második</option>\r\n                                <option value=\"3\">Harmadik</option>\r\n                                <option value=\"4\">Negyedik</option>\r\n                            </select>\r\n                        </label>\r\n                    </div>\r\n                    <hr />\r\n                        <input type=\"submit\" value=\"Mentés\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        qst: state.Questions\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAddQuestion: (question,cone,ctwo,cthree,cfour,ans) => dispatch({type: actionTypes.ADD_QUESTION,question,cone,ctwo,cthree,cfour,ans})\r\n    };\r\n    \r\n};\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Questioneditor);","import React from 'react';\nimport { NavLink, Route, Redirect } from 'react-router-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport Game from '../Game/Game';\nimport '../../styles/App.css';\nimport Questioneditor from '../Questioneditor/Questioneditor';\nimport * as actionTypes from '../../store/actions';\n\nclass App extends React.Component {\n  componentWillMount(){\n    this.props.restartPage();\n  }\n  \n  handleClick = (event) => {\n    if(this.props.running){\n      if(!window.confirm(\"Biztos el szeretnéd hagyni az oldalt? Még nem fejezted be a játékot.\")){\n          event.preventDefault();\n      }else{\n        this.props.restartPage();\n      } \n    }\n  }\n\n  render() {\n    return (\n      <BrowserRouter>  \n            <div>\n                <header className=\"menu\">    \n                    <nav>\n                        <ul>\n                            <li><NavLink to=\"/game\">Játék</NavLink></li>\n                            <li><NavLink onClick={this.handleClick} to=\"/questions\">Kérdés kezelő</NavLink></li>\n                        </ul>\n                    </nav>\n                </header>\n                <Redirect from=\"/*\" to=\"/game\"/>\n                <Route path=\"/game\" exact component={Game}/>\n                <Route path=\"/questions\" exact component={Questioneditor}/>\n            </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nconst mapStateToProps = state =>{\n  return{\n      running: state.hasGameStarted\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n      restartPage: () => dispatch({type: actionTypes.RESTART_GAME})\n  };\n};\n\nexport default connect(mapStateToProps,mapDispatchToProps)(App);\n\n","import * as actionTypes from './actions';\r\n\r\nconst initalState = {\r\n    isThereQuestion: false,\r\n    Questions: [],\r\n    numberOfQuestions: 0,\r\n    hasGameStarted: false,\r\n}\r\n\r\nconst reducer = (state = initalState, action) =>{\r\n    switch (action.type){\r\n        case actionTypes.ADD_QUESTION:\r\n            const question = {\r\n                question: action.question,\r\n                choiceOne: action.cone,\r\n                choiceTwo: action.ctwo,\r\n                choiceThree: action.cthree,\r\n                choiceFour: action.cfour,\r\n                answer: action.ans,\r\n                id: Date.now()\r\n            }\r\n            return{ \r\n                ...state,\r\n                numberOfQuestions: state.numberOfQuestions + 1,\r\n                Questions: state.Questions.concat(question)\r\n            }\r\n        case actionTypes.DELETE_QUESTION:\r\n            const updatedArray = state.Questions.filter(Questions => Questions.id !== action.id);\r\n            return{\r\n                ...state,\r\n                numberOfQuestions: state.numberOfQuestions - 1,\r\n                Questions: updatedArray\r\n            }\r\n        case actionTypes.START_GAME:\r\n            return{\r\n                ...state,\r\n                hasGameStarted: true\r\n            }\r\n        case actionTypes.RESTART_GAME:\r\n            return{\r\n                ...state,\r\n                hasGameStarted: false\r\n            }  \r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport './styles/index.css';\nimport App from './containers/App/App';\nimport reducer from './store/reducer';\nimport { loadState, saveState } from './storage/localstorage';\n\n\nconst persistedState = loadState();\nconst store = createStore(reducer,persistedState);\n\nstore.subscribe(() => {\n    saveState(store.getState());\n  });\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n\n\nexport default store;","export const loadState = () => {\r\n    try {\r\n      const serializedState = localStorage.getItem('state');\r\n      if (serializedState === null) {\r\n        return undefined;\r\n      }\r\n      return JSON.parse(serializedState);\r\n    } catch (error) {\r\n      return undefined;\r\n    }\r\n}; \r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem('state', serializedState);\r\n    } catch(error) {\r\n        console.log(error);\r\n    }\r\n};"],"sourceRoot":""}