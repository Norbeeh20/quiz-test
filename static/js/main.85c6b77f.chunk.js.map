{"version":3,"sources":["containers/Game/GameFinished/GameFinished.js","containers/Game/GameStarted/GameStarted.js","containers/Game/Game.js","containers/Questioneditor/Questions/Question/Question.js","containers/Questioneditor/Questions/Questions.js","containers/Questioneditor/Questioneditor.js","App.js","store/reducer.js","index.js","storage/localstorage.js"],"names":["GameFinished","props","points","GameStarted","state","currentQuestion","questionAnswered","currentAnswer","activeOne","activeTwo","activeThree","activeFour","onNextQuestionHandler","document","getElementById","questions","answer","style","backgroundColor","setState","onGiveAnswerHandler","alert","getAnswerHandler","event","target","value","game","this","qstNumber","playerName","question","id","className","onClick","choiceOne","choiceTwo","choiceThree","choiceFour","Component","connect","Questions","numberOfQuestions","Game","hasGameStarted","startGameHandler","nmb","playerNameHandler","onChange","Question","delete","qst","map","item","key","onDeleteQuestion","dispatch","type","Questioneditor","handleInputChange","name","handleSubmit","onAddQuestion","preventDefault","questionArray","onSubmit","cone","ctwo","cthree","cfour","ans","App","to","from","path","exact","component","initalState","isThereQuestion","reducer","action","Date","now","concat","updatedArray","filter","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadState","store","createStore","subscribe","stringify","setItem","console","log","saveState","getState","ReactDOM","render"],"mappings":"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","file":"static/js/main.85c6b77f.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst GameFinished = (props) => {\r\n    return (\r\n        <div>\r\n            <p>Elfogytak a kérdések, vége a kvíznek!</p>\r\n            <p>Összesen {props.points} pontot gyűjtöttél.</p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GameFinished;","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport GameFinished from '../GameFinished/GameFinished';\r\nimport './GameStarted.css';\r\n\r\n\r\nclass GameStarted extends Component{\r\n    state = {\r\n        currentQuestion: 0,\r\n        questionAnswered: false,\r\n        points: 0,\r\n        currentAnswer: null,\r\n        activeOne: false,\r\n        activeTwo: false,\r\n        activeThree: false,\r\n        activeFour: false\r\n    }\r\n\r\n    onNextQuestionHandler = () => {\r\n        document.getElementById(this.props.questions[this.state.currentQuestion].answer).style.backgroundColor = \"\";\r\n        this.setState({currentQuestion: this.state.currentQuestion + 1,\r\n        questionAnswered:false,activeOne: false,activeTwo:false,activeThree:false,activeFour:false});\r\n    }\r\n\r\n    onGiveAnswerHandler = () => {\r\n        if(+this.state.currentAnswer === +this.props.questions[this.state.currentQuestion].answer){\r\n            this.setState({questionAnswered: true,\r\n            points: this.state.points + 1});\r\n            alert(\"Helyes válasz gratulálok!\");\r\n            document.getElementById(this.props.questions[this.state.currentQuestion].answer).style.backgroundColor = \"#22d6af\";\r\n        }else if(this.state.currentAnswer === null){\r\n            alert(\"Válassz ki egy válasz lehetőséget!\");\r\n        }else{\r\n            this.setState({questionAnswered: true});\r\n            alert(\"Rossz válasz!\")\r\n            document.getElementById(this.props.questions[this.state.currentQuestion].answer).style.backgroundColor = \"#22d6af\";\r\n        }\r\n    }\r\n\r\n    getAnswerHandler = (event) => {\r\n        if(!this.state.questionAnswered){\r\n            this.setState({currentAnswer: event.target.value});\r\n            switch(event.target.value){\r\n                case \"1\":\r\n                    this.setState({activeOne: true,activeTwo:false,activeThree:false,activeFour:false});\r\n                    break;\r\n                case \"2\":\r\n                    this.setState({activeOne: false,activeTwo:true,activeThree:false,activeFour:false});\r\n                    break;\r\n                case \"3\":\r\n                    this.setState({activeOne: false,activeTwo:false,activeThree:true,activeFour:false});\r\n                    break;\r\n                case \"4\":\r\n                    this.setState({activeOne: false,activeTwo:false,activeThree:false,activeFour:true});\r\n                    break;\r\n                default:\r\n                    break;\r\n            }\r\n        }   \r\n    }\r\n\r\n    render(){\r\n        let game;\r\n\r\n        if(this.state.currentQuestion === this.props.qstNumber){\r\n            game = <GameFinished points={this.state.points}/>\r\n        }else{\r\n            game = (\r\n                <div>  \r\n                    <p>Hello {this.props.playerName}! </p>\r\n                    <p>{this.state.currentQuestion + 1}. kérdés:</p>\r\n                    <p>{this.props.questions[this.state.currentQuestion].question}</p>\r\n                        Első válasz: <button value=\"1\" id=\"1\" className={this.state.activeOne ? \"testing active\" : \"testing\"} onClick={event => this.getAnswerHandler(event)}>{this.props.questions[this.state.currentQuestion].choiceOne}</button>\r\n                        &emsp; Második válasz: <button value=\"2\" id=\"2\" className={this.state.activeTwo ? \"testing active\" : \"testing\"} onClick={event => this.getAnswerHandler(event)}>{this.props.questions[this.state.currentQuestion].choiceTwo}</button>\r\n                        <p/>\r\n                        Harmadik válasz: <button value=\"3\" id=\"3\" className={this.state.activeThree ? \"testing active\" : \"testing\"} onClick={event => this.getAnswerHandler(event)}>{this.props.questions[this.state.currentQuestion].choiceThree}</button>\r\n                        &emsp; Negyedik válasz: <button value=\"4\" id=\"4\" className={this.state.activeFour ? \"testing active\" : \"testing\"} onClick={event => this.getAnswerHandler(event)}>{this.props.questions[this.state.currentQuestion].choiceFour}</button>\r\n                        <p/>\r\n                        {this.state.questionAnswered === false &&\r\n                            <button className=\"testing\" onClick={this.onGiveAnswerHandler}>Beadás</button>}\r\n                        {this.state.questionAnswered === true &&\r\n                            <button className=\"testing\" onClick={this.onNextQuestionHandler}> {this.state.currentQuestion === (this.props.qstNumber-1) ? \"Játék vége\" : \"Következő kérdés\"}</button>}\r\n                    <hr />\r\n                        <p>Pontjaid: {this.state.points}</p>\r\n                        <p>Hátralévő kérdések száma: {this.props.qstNumber-(this.state.currentQuestion + 1)}</p>\r\n                    <hr />\r\n                </div>)\r\n        }\r\n\r\n        return (\r\n            <div> \r\n                {game}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        questions: state.Questions,\r\n        qstNumber: state.numberOfQuestions\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(GameStarted);","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport GameStarted from './GameStarted/GameStarted';\r\nimport './Game.css';\r\n\r\n\r\nclass Game extends Component {\r\n    state = {\r\n        hasGameStarted: false,\r\n        playerName: \"player\"\r\n    }\r\n\r\n    startGameHandler = () => {\r\n        if(this.state.playerName === \"\"){\r\n            alert(\"Név nélkül nem lehet elindítani, kérlek add meg!\");\r\n        }else if(this.props.nmb === 0){\r\n            alert(\"Ha nincs kérdés hozzáadva anélkül nem tudod elindítani, kérlek adj hozzá legalább 1 kérdést!\");\r\n        }\r\n        else{\r\n            this.setState({hasGameStarted: true});\r\n        }        \r\n    }\r\n\r\n    playerNameHandler = (event) => {\r\n        this.setState({playerName: event.target.value});\r\n    }\r\n\r\n    render () {\r\n        let game = null;\r\n        \r\n        if(this.state.hasGameStarted){\r\n            game = <GameStarted\r\n            playerName={this.state.playerName}/>\r\n        }else{\r\n            game = (<div>\r\n                        <p>Add meg a játékos nevedet!</p>\r\n                        <input onChange={event => this.playerNameHandler(event)} value={this.state.playerName}/>\r\n                        <p/>\r\n                        <button  className=\"beforeStart\" onClick={this.startGameHandler}>Start game</button>\r\n                    </div>)\r\n        }\r\n\r\n        return (\r\n            <div className=\"test\">\r\n                {game}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        nmb: state.numberOfQuestions\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Game);","import React from 'react';\r\nimport './Question.css';\r\nimport '../../../Game/Game.css';\r\n\r\nconst Question = (props) => {\r\n    return (\r\n        <div className=\"question\">\r\n            <p>Kérdés:{props.question.question}</p>\r\n            <p>Első válasz:{props.question.choiceOne} &emsp;  Második válasz:{props.question.choiceTwo}</p>\r\n            <p>Harmadik válasz:{props.question.choiceThree} &emsp;  Negyedik válasz:{props.question.choiceFour}</p>\r\n            <p>Válasz:{props.question.answer}</p>\r\n            <p><button className=\"beforeStart\"onClick={props.delete}>Delete</button></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Question;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Question from './Question/Question';\r\n\r\nclass Questions extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <div>\r\n                    {this.props.qst.map((item) => (\r\n                        <Question question={item} key={item.id} delete={() => this.props.onDeleteQuestion(item.id)}/>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    \r\n}\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        qst: state.Questions\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onDeleteQuestion: (id) => dispatch({type: 'DELETE_QUESTION',id})\r\n    };\r\n    \r\n};\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Questions);\r\n\r\n","import React, {Component} from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Questions from './Questions/Questions';\r\nimport './Questioneditor.css';\r\n\r\nclass Questioneditor extends Component{\r\n    state = { \r\n        question: 'Add meg a kérdést...',\r\n        choiceOne: '',\r\n        choiceTwo: '',\r\n        choiceThree: '',\r\n        choiceFour: '',\r\n        answer: 1\r\n    }\r\n\r\n    \r\n    handleInputChange = (event) => {\r\n        const target = event.target;\r\n        const value = target.value;\r\n        const name = target.name;\r\n    \r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    }    \r\n    \r\n    handleSubmit = (event) => {\r\n        if(this.state.question === \"\" || this.state.choiceOne === \"\" || this.state.choiceTwo === \"\" || this.state.choiceThree === \"\" || this.state.choiceFour === \"\"){\r\n            alert(\"Ki kell tölteni az összes mezőt, ahhoz hogy kérdést hozzáadd.\");\r\n        }else{\r\n        this.props.onAddQuestion(this.state.question,this.state.choiceOne,this.state.choiceTwo,this.state.choiceThree,this.state.choiceFour,this.state.answer);\r\n        this.setState({ \r\n            question: 'Add meg a kérdést...',\r\n            choiceOne: '',\r\n            choiceTwo: '',\r\n            choiceThree: '',\r\n            choiceFour: '',\r\n            answer: 1\r\n        })\r\n        }\r\n        event.preventDefault();\r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div className=\"formAdd\">\r\n                <div className=\"scroll\">\r\n                    <Questions questionArray={this.props.qst}/>\r\n                </div>\r\n                <form className=\"addQuestion\" onSubmit={this.handleSubmit}>\r\n                    Kérdés hozzáadása:\r\n                    <hr />\r\n                    <div>\r\n                        <label>\r\n                            Kérdés:\r\n                            <input name=\"question\" type=\"text\" value={this.state.question} onChange={this.handleInputChange} />\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                            Első válasz:\r\n                            <input name=\"choiceOne\" type=\"text\" value={this.state.choiceOne} onChange={this.handleInputChange} />\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                            Második válasz:\r\n                            <input name=\"choiceTwo\" type=\"text\" value={this.state.choiceTwo} onChange={this.handleInputChange} />\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                            Harmadik válasz:\r\n                            <input name=\"choiceThree\" type=\"text\" value={this.state.choiceThree} onChange={this.handleInputChange} />\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                            Negyedik válasz:\r\n                            <input name=\"choiceFour\" type=\"text\" value={this.state.choiceFour} onChange={this.handleInputChange} />\r\n                        </label>\r\n                    </div>\r\n                    <div>\r\n                        <label>\r\n                            Melyik a helyes válasz?\r\n                            <select name=\"answer\" value={this.state.answer} onChange={this.handleInputChange}>\r\n                                <option value=\"1\">1</option>\r\n                                <option value=\"2\">2</option>\r\n                                <option value=\"3\">3</option>\r\n                                <option value=\"4\">4</option>\r\n                            </select>\r\n                        </label>\r\n                    </div>\r\n                    <hr />\r\n                        <input type=\"submit\" value=\"Hozzáadás\" />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps = state =>{\r\n    return{\r\n        qst: state.Questions\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        onAddQuestion: (question,cone,ctwo,cthree,cfour,ans) => dispatch({type: 'ADD_QUESTION',question,cone,ctwo,cthree,cfour,ans})\r\n    };\r\n    \r\n};\r\n\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(Questioneditor);","import React, { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport Game from './containers/Game/Game';\nimport { NavLink, Route, Redirect } from 'react-router-dom';\nimport './App.css';\nimport Questioneditor from './containers/Questioneditor/Questioneditor';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>  \n            <div>\n                <header className=\"menu\">    \n                    <nav>\n                        <ul>\n                            <li><NavLink to=\"/game\">Játék</NavLink></li>\n                            <li><NavLink to=\"/questions\">Kérdések</NavLink></li>\n                        </ul>\n                    </nav>\n                </header>\n                <Redirect from=\"/*\" to=\"/game\"/>\n                <Route path=\"/game\" exact component={Game}/>\n                <Route path=\"/questions\" exact component={Questioneditor}/>\n            </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","const initalState = {\r\n    isThereQuestion: false,\r\n    Questions: [],\r\n    numberOfQuestions: 0\r\n}\r\n\r\n\r\nconst reducer = (state = initalState, action) =>{\r\n    switch (action.type){\r\n        case 'ADD_QUESTION':\r\n            const question = {\r\n                question: action.question,\r\n                choiceOne: action.cone,\r\n                choiceTwo: action.ctwo,\r\n                choiceThree: action.cthree,\r\n                choiceFour: action.cfour,\r\n                answer: action.ans,\r\n                id: Date.now()\r\n            }\r\n            return{ \r\n                ...state,\r\n                numberOfQuestions: state.numberOfQuestions + 1,\r\n                Questions: state.Questions.concat(question)\r\n            }\r\n        case 'DELETE_QUESTION':\r\n            const updatedArray = state.Questions.filter(Questions => Questions.id !== action.id);\r\n            return{\r\n                ...state,\r\n                numberOfQuestions: state.numberOfQuestions - 1,\r\n                Questions: updatedArray\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\n//import registerServiceWorker from './serviceWorker';\nimport reducer from './store/reducer';\nimport { loadState, saveState } from './storage/localstorage';\n\n\nconst persistedState = loadState();\nconst store = createStore(reducer,persistedState);\n\nstore.subscribe(() => {\n    saveState(store.getState());\n  });\n\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\n//registerServiceWorker();\n\n\nexport default store;","export const loadState = () => {\r\n    try {\r\n      const serializedState = localStorage.getItem('state');\r\n      if (serializedState === null) {\r\n        return undefined;\r\n      }\r\n      return JSON.parse(serializedState);\r\n    } catch (err) {\r\n      return undefined;\r\n    }\r\n}; \r\n\r\nexport const saveState = (state) => {\r\n    try {\r\n        const serializedState = JSON.stringify(state);\r\n        localStorage.setItem('state', serializedState);\r\n    } catch(err) {\r\n        console.log(err);\r\n    }\r\n};"],"sourceRoot":""}